name: Deploy AWS Glue Jobs via Terraform

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'jobs/**/main.py'
      - 'glue_helpers/**'
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: glue-deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: us-east-1
  ARTIFACTS_BUCKET: your-artifacts-bucket
  GLUE_SCRIPTS_BUCKET: aws-glue-assets-607522033592-us-east-1

jobs:
  validate:
    name: Validate Terraform + Python
    runs-on: ubuntu-latest
    if: github.head_ref == 'develop'

    steps:
      - uses: actions/checkout@v3

      - name: Check Terraform formatting
        working-directory: terraform
        run: terraform fmt -check

      - name: Validate Terraform configuration
        working-directory: terraform
        run: terraform validate

      - name: Check Python syntax for all job scripts
        run: |
          for file in jobs/*/main.py; do
            echo "Checking $file..."
            python -m py_compile "$file"
          done

  upload-assets:
    name: Upload Glue Scripts & Helpers
    runs-on: ubuntu-latest
    needs: validate
    if: github.head_ref == 'develop'

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Package and upload glue_helpers.zip
        run: |
          zip -r glue_helpers.zip glue_helpers/ -x '__pycache__/*'
          aws s3 cp glue_helpers.zip s3://${ARTIFACTS_BUCKET}/dependencies/glue_helpers.zip

      - name: Upload Glue job scripts (.py) to S3
        run: |
          for dir in jobs/*; do
            if [ -d "$dir" ]; then
              job_name=$(basename "$dir")
              source_file="$dir/main.py"
              target_path="s3://${GLUE_SCRIPTS_BUCKET}/scripts/${job_name}.py"
              if [ -f "$source_file" ]; then
                aws s3 cp "$source_file" "$target_path"
                echo "- $source_file → $target_path" >> deployed_jobs.txt
              else
                echo "❌ Missing $source_file"
                exit 1
              fi
            fi
          done

      - name: Write summary of deployed jobs
        run: |
          echo "### Deployed Glue Job Scripts" >> $GITHUB_STEP_SUMMARY
          cat deployed_jobs.txt >> $GITHUB_STEP_SUMMARY || echo "No jobs deployed"

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: upload-assets
    if: github.head_ref == 'develop'

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Select or Create Workspace
        working-directory: terraform
        run: |
          terraform workspace select dev || terraform workspace new dev

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file=dev.tfvars

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.head_ref == 'develop' && github.base_ref == 'main'

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=dev.tfvars
